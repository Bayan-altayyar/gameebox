<!doctype html>
<html lang="ar" dir="rtl">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>GameBox — هاكاثون تشويقي</title>
  <style>
    :root{
      --bg:#000;
      --primary-1: #ff3b30; /* أحمر */
      --primary-2: #ffcc00; /* أصفر */
      --primary-3: #00c853; /* أخضر */
      --primary-4: #2f80ed; /* أزرق */
      --neon: 0 6px 20px rgba(0,0,0,.6);
      --card-radius: 16px;
    }

    html,body{
      height:100%;
      margin:0;
      font-family: "Segoe UI", Roboto, "Noto Sans Arabic", system-ui, Arial;
      background: radial-gradient(1200px 500px at 10% 10%, rgba(47,128,237,0.06), transparent),
                  radial-gradient(900px 400px at 90% 90%, rgba(255,59,48,0.04), transparent),
                  var(--bg);
      color:#fff;
      -webkit-font-smoothing:antialiased;
      -moz-osx-font-smoothing:grayscale;
    }

    .container{
      max-width:900px;
      margin:24px auto;
      padding:20px;
      display:flex;
      gap:20px;
      align-items:flex-start;
      justify-content:center;
      position:relative;
    }

    /* Card that resembles poster */
    .poster{
      width: 720px;
      height: 1000px;
      background:#000;
      border-radius:12px;
      box-shadow: 0 10px 30px rgba(0,0,0,.7);
      overflow:hidden;
      position:relative;
      border: 6px solid rgba(255,255,255,0.02);
    }

    /* Top bar: logo + tagline */
    .branding{
      position:absolute;
      left:50%;
      top:260px;
      transform:translateX(-50%);
      text-align:center;
      z-index:10;
      pointer-events:none;
    }

    .logo {
      display:flex;
      align-items:center;
      justify-content:center;
      gap:12px;
      pointer-events:auto;
    }

    .logo img{ width:90px; height:90px; object-fit:contain; filter: drop-shadow(0 8px 18px rgba(0,0,0,.6)); }
    .logo .title{
      font-weight:800;
      font-size:48px;
      letter-spacing:2px;
      display:flex;
      gap:6px;
      align-items:center;
      justify-content:center;
    }
    .logo .title .g{ color:var(--primary-4); }
    .logo .title .a{ color:var(--primary-3); }
    .logo .title .m{ color:var(--primary-1); }
    .logo .title .e{ color:var(--primary-2); }
    .logo .subtitle{ font-size:12px; text-transform:uppercase; opacity:.8; margin-top:6px; }

    /* Decorative shapes (similar to poster) */
    .decor{
      position:absolute;
      inset:0;
      pointer-events:none;
    }

    /* Shapes container where the interactive shapes will appear */
    .play-area{
      position:absolute;
      inset:0;
      display:flex;
      align-items:center;
      justify-content:center;
      pointer-events:auto;
    }

    /* game UI */
    .ui{
      position:absolute;
      top:20px;
      left:20px;
      display:flex;
      gap:10px;
      z-index:20;
      align-items:center;
    }
    .badge{
      background: rgba(255,255,255,0.04);
      padding:10px 14px;
      border-radius:999px;
      backdrop-filter: blur(6px);
      display:flex;
      gap:12px;
      align-items:center;
      border:1px solid rgba(255,255,255,0.03);
    }
    .timer{
      font-weight:700;
      font-size:20px;
      color:#fff;
      min-width:54px;
      text-align:center;
    }
    .score{
      font-size:14px;
      opacity:.95;
    }

    /* start/controls at bottom */
    .controls{
      position:absolute;
      bottom:28px;
      width:100%;
      display:flex;
      justify-content:center;
      z-index:20;
      gap:12px;
      pointer-events:auto;
    }
    button{
      background: linear-gradient(90deg,#1f1f1f,#2a2a2a);
      color:#fff;
      border:0;
      padding:12px 18px;
      border-radius:12px;
      cursor:pointer;
      font-weight:700;
      letter-spacing:0.6px;
      box-shadow: var(--neon);
    }
    button.primary{
      background: linear-gradient(90deg,var(--primary-4), var(--primary-1));
      color:#030303;
      transform:translateY(0);
    }

    /* End screen overlay */
    .overlay{
      position:absolute;
      inset:0;
      display:flex;
      align-items:center;
      justify-content:center;
      background: linear-gradient(180deg, rgba(0,0,0,0.4), rgba(0,0,0,0.7));
      z-index:40;
      opacity:0;
      visibility:hidden;
      transition: all .3s ease;
      flex-direction:column;
      gap:10px;
      text-align:center;
      padding:20px;
    }
    .overlay.show{
      opacity:1;
      visibility:visible;
    }
    .overlay h2{ font-size:32px; margin:6px 0; }
    .overlay p{ margin:0; opacity:.9; }

    /* styles for moving shapes (non-interactive background) */
    .shape {
      position:absolute;
      border-radius:6px;
      opacity:0.95;
      box-shadow: 0 6px 20px rgba(0,0,0,.6);
      transform-origin:center;
    }

    /* clickable game items */
    .item{
      position:absolute;
      width:68px;
      height:68px;
      display:flex;
      align-items:center;
      justify-content:center;
      cursor:pointer;
      user-select:none;
      transition: transform .12s ease;
      border-radius:12px;
    }
    .item:active{ transform: scale(.92) rotate(-6deg); }
    .item .inner{
      width:82%;
      height:82%;
      border-radius:8px;
      display:flex;
      align-items:center;
      justify-content:center;
      color:#fff;
      font-weight:800;
      font-size:18px;
      text-shadow: 0 2px 6px rgba(0,0,0,.6);
    }

    /* colors for items */
    .c-red{ background:linear-gradient(180deg,var(--primary-1), #ff7b6b); }
    .c-yellow{ background:linear-gradient(180deg,var(--primary-2), #ffd24d); color:#111; }
    .c-green{ background:linear-gradient(180deg,var(--primary-3), #57d27c); color:#022; }
    .c-blue{ background:linear-gradient(180deg,var(--primary-4), #6fb1ff); color:#011; }

    /* responsive */
    @media (max-width:820px){
      .poster{ width:360px; height:800px; }
      .logo .title{ font-size:28px; }
      .logo img{ width:64px; height:64px; }
      .item{ width:56px; height:56px; }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="poster" role="application" aria-label="ملصق هاكاثون GameBox">

      <!-- Decorative SVG shapes similar to your poster -->
      <svg class="decor" width="100%" height="100%" viewBox="0 0 720 1000" preserveAspectRatio="xMidYMid slice" aria-hidden="true">
        <!-- top-left red square outline -->
        <rect x="40" y="160" width="110" height="110" fill="none" stroke="#ff3b30" stroke-width="10" rx="6"/>
        <!-- blue L -->
        <path d="M150 80 L300 80 L300 250" stroke="#2f80ed" stroke-width="12" fill="none" stroke-linecap="square"/>
        <!-- green zig -->
        <path d="M470 120 L470 330" stroke="#00c853" stroke-width="12" fill="none" stroke-linecap="square"/>
        <path d="M400 360 L480 360 L480 420 L640 420" stroke="#00c853" stroke-width="12" fill="none" stroke-linecap="square"/>
        <!-- yellow top bar -->
        <rect x="560" y="86" width="110" height="12" rx="6" fill="#ffcc00"/>
        <!-- triangle -->
        <polygon points="170,700 225,780 115,780" fill="none" stroke="#ffcc00" stroke-width="12" stroke-linejoin="round"/>
        <!-- circle -->
        <circle cx="510" cy="610" r="60" fill="none" stroke="#2f80ed" stroke-width="12"/>
        <path d="M562 665 A80 80 0 0 0 610 720" stroke="#ff3b30" stroke-width="12" fill="none" stroke-linecap="round"/>
        <!-- many small decorative lines -->
        <rect x="40" y="880" width="18" height="46" rx="4" fill="#ffcc00"/>
        <rect x="120" y="880" width="18" height="46" rx="4" fill="#00c853"/>
        <rect x="640" y="880" width="18" height="88" rx="6" fill="#ff3b30"/>
        <rect x="90" y="540" width="56" height="12" rx="6" fill="#2f80ed"/>
      </svg>

      <!-- center branding (logo + text). Replace <img> src with your logo path if available -->
      <div class="branding" aria-hidden="false">
        <div class="logo">
          <!-- placeholder cube-like logo (you can replace src) -->
          <img src="" alt="" style="display:none;" />
          <div class="title" aria-hidden="true">
            <span class="g">G</span><span class="a">A</span><span class="m">M</span><span class="e">E</span>
            <span style="width:10px"></span>
            <span style="color:#46d0ff; font-weight:900; font-size:44px;">BOX</span>
          </div>
        </div>
        <div class="subtitle">WHERE GAMERS ARE BORN — هاكاثون قيم بوكس</div>
      </div>

      <!-- interactive play area -->
      <div class="play-area" id="playArea" aria-live="polite"></div>

      <!-- UI -->
      <div class="ui">
        <div class="badge" role="status" aria-atomic="true">
          <div class="timer" id="timer">20</div>
          <div class="score">النقاط: <span id="score">0</span></div>
        </div>
      </div>

      <!-- controls -->
      <div class="controls">
        <button id="startBtn" class="primary">ابدأ التشويق!</button>
        <button id="rulesBtn">قوانين سريعة</button>
      </div>

      <!-- overlay end -->
      <div class="overlay" id="overlay" role="dialog" aria-modal="true">
        <h2 id="finalTitle">انتهى الوقت!</h2>
        <p id="finalMsg">نقاطك: <strong id="finalScore">0</strong></p>
        <div style="display:flex;gap:10px; margin-top:10px;">
          <button id="retryBtn">اعادة المحاولة</button>
          <button id="registerBtn" class="primary">سجل الآن للهاكاثون</button>
        </div>
      </div>

    </div>
  </div>

<script>
/*
  Teaser mini-game logic:
  - Press "ابدأ التشويق!" to start a 20s round
  - Colored items spawn randomly. Click them to get points.
  - At time end, overlay appears with score and buttons.
*/

const playArea = document.getElementById('playArea');
const timerEl = document.getElementById('timer');
const scoreEl = document.getElementById('score');
const startBtn = document.getElementById('startBtn');
const rulesBtn = document.getElementById('rulesBtn');
const overlay = document.getElementById('overlay');
const finalScore = document.getElementById('finalScore');
const retryBtn = document.getElementById('retryBtn');
const registerBtn = document.getElementById('registerBtn');

let score = 0;
let timeLeft = 20;
let spawnInterval = null;
let countdown = null;
let activeItems = new Set();

function random(min,max){ return Math.random()*(max-min)+min; }

function createItem(){
  // create a clickable item with random color & shape label
  const types = [
    { cls:'c-red', pts:10, label:'♠' },
    { cls:'c-yellow', pts:5, label:'▲' },
    { cls:'c-green', pts:8, label:'★' },
    { cls:'c-blue', pts:12, label:'○' }
  ];
  const t = types[Math.floor(Math.random()*types.length)];
  const el = document.createElement('div');
  el.className = 'item ' + t.cls;
  el.style.left = (10 + random(0,80)) + '%';
  el.style.top = (10 + random(0,80)) + '%';
  el.dataset.pts = t.pts;
  el.setAttribute('role','button');
  el.setAttribute('aria-label', 'عنصر نقاط ' + t.pts);
  const inner = document.createElement('div');
  inner.className='inner';
  inner.textContent = t.label;
  el.appendChild(inner);

  // small entrance animation
  el.style.transform = 'scale(0.2) rotate(0deg)';
  el.style.transition = 'transform 250ms cubic-bezier(.2,.9,.3,1)';
  requestAnimationFrame(()=> el.style.transform = 'scale(1)');

  // click handler
  function handleClick(e){
    // add points
    score += t.pts;
    updateScore();
    // pop effect and remove
    el.style.transform = 'scale(0.6) rotate(-45deg)';
    el.style.opacity = '0';
    el.removeEventListener('click', handleClick);
    activeItems.delete(el);
    setTimeout(()=> el.remove(), 250);
  }
  el.addEventListener('click', handleClick);

  // auto-remove after a while
  const lifetime = 2200 + Math.random()*1800;
  activeItems.add(el);
  playArea.appendChild(el);
  setTimeout(()=>{
    if (activeItems.has(el)){
      activeItems.delete(el);
      el.remove();
    }
  }, lifetime);
}

function spawnRoutine(){
  // spawn 1-2 items per tick
  createItem();
  if (Math.random() > 0.6) createItem();
  // occasionally spawn clustered
  if (Math.random()>0.95){
    setTimeout(()=>createItem(), 150);
    setTimeout(()=>createItem(), 300);
  }
}

function updateScore(){
  scoreEl.textContent = score;
}

function startGame(){
  // reset
  score = 0;
  timeLeft = 20;
  updateScore();
  timerEl.textContent = timeLeft;
  overlay.classList.remove('show');
  // spawn faster as time goes
  spawnInterval = setInterval(spawnRoutine, 700);
  countdown = setInterval(()=>{
    timeLeft -= 1;
    timerEl.textContent = timeLeft;
    // speed up spawning gradually
    const speed = Math.max(220, 700 - (20 - timeLeft)*25);
    clearInterval(spawnInterval);
    spawnInterval = setInterval(spawnRoutine, speed);
    if (timeLeft <= 0){
      endGame();
    }
  }, 1000);
  // initial burst
  spawnRoutine(); spawnRoutine();
}

function endGame(){
  clearInterval(countdown);
  clearInterval(spawnInterval);
  // clear remaining items after a short delay
  setTimeout(()=> {
    for(const el of Array.from(activeItems)){
      if (el && el.remove) el.remove();
    }
    activeItems.clear();
  }, 300);
  timerEl.textContent = 0;
  finalScore.textContent = score;
  overlay.classList.add('show');
}

startBtn.addEventListener('click', ()=>{
  startGame();
  startBtn.textContent = 'قيد اللعب...';
  startBtn.disabled = true;
  setTimeout(()=>{
    startBtn.textContent = 'ابدأ التشويق!';
    startBtn.disabled = false;
  }, 21000);
});

retryBtn.addEventListener('click', ()=>{
  overlay.classList.remove('show');
  startGame();
});

rulesBtn.addEventListener('click', ()=>{
  alert('قواعد سريعة:\n- اضغط على الأشكال الملونة لكسب نقاط.\n- لديك 20 ثانية فقط.\n- الأشكال المختلفة تعطي نقاط مختلفة.\nحظاً سعيداً!');
});

// register button redirect (replace URL with actual registration link)
registerBtn.addEventListener('click', ()=>{
  // يمكنك تغيير الرابط إلى صفحة التسجيل الحقيقية
  window.open('https://example.com/register','_blank');
});

// accessibility: allow keyboard "Enter" to click focused item
document.addEventListener('keydown', (e)=>{
  if (e.key === 'Enter'){
    const active = document.activeElement;
    if (active && active.classList && active.classList.contains('item')){
      active.click();
    }
  }
});

// small demo: spawn some non-interactive decorative shapes that slowly move (parallax)
(function decoLoop(){
  const shapes = [];
  const colors = ['#ff3b30','#ffcc00','#00c853','#2f80ed'];
  for(let i=0;i<8;i++){
    const s = document.createElement('div');
    s.className = 'shape';
    s.style.width = (40+Math.random()*160)+'px';
    s.style.height = (8+Math.random()*24)+'px';
    s.style.left = (Math.random()*80)+'%';
    s.style.top = (Math.random()*90)+'%';
    s.style.opacity = 0.12 + Math.random()*0.45;
    s.style.transform = 'rotate(' + (Math.random()*90-45) + 'deg)';
    s.style.background = colors[i%colors.length];
    playArea.appendChild(s);
    shapes.push(s);
  }
  // animate slowly
  function tick(){
    shapes.forEach((s,idx)=>{
      const left = (parseFloat(s.style.left) + Math.cos((Date.now()/3000) + idx)*0.04);
      const top = (parseFloat(s.style.top) + Math.sin((Date.now()/2500)+idx)*0.03);
      s.style.left = (left%100)+'%';
      s.style.top = (top%100)+'%';
    });
    requestAnimationFrame(tick);
  }
  tick();
})();

</script>
</body>
</html>
